/**
 * @author Keltin Mesonjesi (keltin.mesonjesi@dunegroup.it)
 * @date 16/02/2021
 * @description HDT_LC_OrderDossierWizardActions.cls - Class that holds methods that are called from hdtOrderDossierWizardActions.js
 * @history Inserire Nome Cognome – Data Modifica – Descrizione della modifica
 */
public inherited sharing class HDT_LC_OrderDossierWizardActions {
    
    private static HDT_QR_Order orderQr = new HDT_QR_Order();
    private static HDT_SRV_Order orderSrv = new HDT_SRV_Order();

    /**
    * @author Keltin Mesonjesi (keltin.mesonjesi@dunegroup.it)
    * @date 16/02/2021
    * @description Handle "stampa" action
    * @param Order orderParent
    */
    @AuraEnabled
    public static void save(Order orderParent){

        List<Order> childOrders = orderQr.getChildOrdersByParentId(orderParent.Id);
        List<Order> ordersToUpdate = new List<Order>();
        
        Order orderToUpdate = new Order(
            Id = orderParent.Id
        );

          //fix CC Generazione Credential LG MB
         // orderToUpdate = HDT_LC_CanaleContattoIVRLogin.generateUsernameAndPassword(orderToUpdate);
        // if (orderParent.ContractSigned__c == false) {
                // LG Ripristino logica 18/09 FF
        if (orderParent.ContractSigned__c == false) {
            orderToUpdate.Phase__c = 'Documentazione da inviare';
        } else {
            orderToUpdate.Phase__c = 'Documentazione da validare';
             //   orderToUpdate.Phase__c = 'Plico da inviare'; 
        }
           // orderToUpdate.Phase__c = 'Documentazione da inviare';
        // } else {
         //   orderToUpdate.Phase__c = 'Plico da inviare'; 
        // }

        orderToUpdate.DocumentPackage__c = 'Richiesto';

        for (Order childOrd : childOrders) {
            if (childOrd.RecordType.DeveloperName == 'HDT_RT_VolturaConSwitch') {
                ordersToUpdate.add(
                    new Order(
                        Id = childOrd.Id,
                        Phase__c = childOrd.Account.RecordType.DeveloperName == 'HDT_RT_Business' ? 'Documentazione Validata' : (checkRequiredDocs(childOrd) ? 'Documentazione Validata': 'In attesa validazione')
                    )
                );
            }
        }
        
        ordersToUpdate.add(orderToUpdate);

        //update child orders
        for (Order childOrder : childOrders) {
            if (childOrder.ComfortCallDaysDue__c != null) {
                ordersToUpdate.add(new Order(
                    Id = childOrder.Id,
                    Phase__c = 'In attesa conferma cliente'
                ));
            }
        }

        orderSrv.updateRecords(ordersToUpdate);

    }

    @AuraEnabled
    public static String createActivityVocalOrder(Order orderParent){

        List<Order> ordersToUpdate = new List<Order>();
        
        Order orderToUpdate = new Order(
            Id = orderParent.Id
        );
        system.debug('********DEBUGLOL:' + orderParent);
        if(orderParent.SignatureMethod__c == 'Vocal Order' && orderParent.Phase__c == 'In Lavorazione'){
            if (orderParent.ContractSigned__c == false) {
                orderToUpdate.Phase__c = 'Documentazione da inviare';
            } else {
                orderToUpdate.Phase__c = 'Documentazione da validare';
                 //   orderToUpdate.Phase__c = 'Plico da inviare'; 
            }
            ordersToUpdate.add(orderToUpdate );
            orderSrv.updateRecords(ordersToUpdate);
        }
        return orderToUpdate.Phase__c;
    }

    @AuraEnabled
    public static void save2(Order orderParent,boolean isPlicoSend){

        List<Order> childOrders = orderQr.getChildOrdersByParentId(orderParent.Id);
        List<Order> ordersToUpdate = new List<Order>();
        
        Order orderToUpdate = new Order(
            Id = orderParent.Id
        );

          //fix CC Generazione Credential LG MB
        //  orderToUpdate = HDT_LC_CanaleContattoIVRLogin.generateUsernameAndPassword(orderToUpdate);
        // if (orderParent.ContractSigned__c == false) {
        //     orderToUpdate.Phase__c = 'Documentazione da inviare';
        // } else {
                // LG Ripristino logica 18/09 FF
        System.debug('********LOL:' + orderParent);
        if(orderParent.Phase__c == 'In Lavorazione'){
            if (orderParent.ContractSigned__c == false) {
                orderToUpdate.Phase__c = 'Documentazione da inviare';
            } else {
                orderToUpdate.Phase__c = 'Documentazione da validare';
                //   orderToUpdate.Phase__c = 'Plico da inviare'; 
            }
        }
        else if(orderParent.Phase__c == 'Registrazione  da validare'){
            orderToUpdate.Phase__c = 'Documentazione Gestita';
            orderToUpdate.status = 'Activated';
        }
      /*  if(isPlicoSend){
          //  orderToUpdate.Phase__c = 'Plico da inviare';
          orderToUpdate.Phase__c = 'Documentazione da validare';
        }
        else{
            orderToUpdate.Phase__c = 'Documentazione da validare';
        }*/
        // }

        orderToUpdate.DocumentPackage__c = 'Richiesto';

        for (Order childOrd : childOrders) {
            if (childOrd.RecordType.DeveloperName == 'HDT_RT_VolturaConSwitch') {
                ordersToUpdate.add(
                    new Order(
                        Id = childOrd.Id,
                        Phase__c = childOrd.Account.RecordType.DeveloperName == 'HDT_RT_Business' ? 'Documentazione Validata' : (checkRequiredDocs(childOrd) ? 'Documentazione Validata': 'In attesa validazione')
                    )
                );
            }
        }
        
        ordersToUpdate.add(orderToUpdate);

        //update child orders
        for (Order childOrder : childOrders) {
            if (childOrder.ComfortCallDaysDue__c != null) {
                ordersToUpdate.add(new Order(
                    Id = childOrder.Id,
                    Phase__c = 'In attesa conferma cliente'
                ));
            }
        }

        orderSrv.updateRecords(ordersToUpdate);

    }

    /**
    * @author Keltin Mesonjesi (keltin.mesonjesi@dunegroup.it)
    * @date 17/02/2021
    * @description Handle "Annulla" action
    * @param Order orderParent
    * @param String cancellationReason
    */
    @AuraEnabled
    public static void cancel(Order orderParent, String cancellationReason){
        
        List<Order> childOrders = orderQr.getChildOrdersByParentId(orderParent.Id);
        List<Order> ordersToUpdate = new List<Order>();

        //update child orders
        for (Order childOrder : childOrders) {
            ordersToUpdate.add(new Order(
                Id = childOrder.Id,
                Status = 'Annullato', //Chiuso
                Phase__c = 'Annullato',
                CancellationReason__c = cancellationReason
            ));
        }

        //update parent order
        ordersToUpdate.add(new Order(
            Id = orderParent.Id,
            Status = 'Annullato', //Chiuso
            Phase__c = 'Annullato',
            CancellationReason__c = cancellationReason
        ));

        orderSrv.updateRecords(ordersToUpdate);
    }

    /**
    * @author Keltin Mesonjesi (keltin.mesonjesi@dunegroup.it)
    * @date 16/02/2021
    * @description Check order required documents
    * @param Order ord
    * @return Boolean
    */
    public static Boolean checkRequiredDocs(Order ord){

        Boolean check = true;

        if(ord.AutorizationVolturaThirdTrader__c != null || ord.CILegalRepresentative__c != null ||  ord.CIAccoutn__c != null || ord.QuickQuote__c != null || ord.ChamberCommerceRegistration__c != null || ord.Instance326__c != null || ord.DocumentLow80__c != null || ord.DocumentPackage__c != null)
        {
           	check = true;
            if(ord.CILegalRepresentative__c != null && !'Validato'.EqualsIgnoreCase(ord.CILegalRepresentative__c)){
                check = false;
            }
            if(ord.CIAccoutn__c != null && !'Validato'.EqualsIgnoreCase(ord.CIAccoutn__c)){
                check = false;
            }
            if(ord.QuickQuote__c != null && !'Validato'.EqualsIgnoreCase(ord.QuickQuote__c)){
                check = false;
            }
            if(ord.ChamberCommerceRegistration__c != null && !'Validato'.EqualsIgnoreCase(ord.ChamberCommerceRegistration__c)){
                check = false;
            }
            if(ord.Instance326__c != null && !'Validato'.EqualsIgnoreCase(ord.Instance326__c)){
                check = false;
            }
            if(ord.DocumentLow80__c != null && !'Validato'.EqualsIgnoreCase(ord.DocumentLow80__c)){
                check = false;
            }
            if(ord.AutorizationVolturaThirdTrader__c != null && !'Validato'.EqualsIgnoreCase(ord.AutorizationVolturaThirdTrader__c)){
                check = false;
            }
            if(ord.DocumentPackage__c != null && !'Validato'.EqualsIgnoreCase(ord.DocumentPackage__c)){
                check = false;
            }
        } else if(ord.AutorizationVolturaThirdTrader__c == null && ord.CILegalRepresentative__c == null &&  ord.CIAccoutn__c == null && ord.QuickQuote__c == null && ord.ChamberCommerceRegistration__c == null && ord.Instance326__c == null && ord.DocumentLow80__c == null && ord.DocumentPackage__c == null) {
            check = true;
        }

        return check;
    }

    /**
    * @author Keltin Mesonjesi (keltin.mesonjesi@dunegroup.it)
    * @date 16/02/2021
    * @description Check if save button should be disabled or not
    * @param String orderParentId
    * @return Boolean
    */
    @AuraEnabled
    public static Boolean isSaveDisabled(Order orderParent){
        Boolean result = false;
        
        List<Order> childOrders = orderQr.getChildOrdersByParentId(orderParent.Id);
        
        for (Order childOrder : childOrders) {
            if (childOrder.Step__c != 20) {
                result = true;
                break;
            }
        }

        return result || orderParent.Status == 'Completed';
    }

}
global with sharing class HDT_SRV_SelfReadingsFacade implements wrts_prcgvr.Interfaces_1_0.IApexCalloutAction {

    global Object execute(Object args) {

        wrts_prcgvr.ApexActionIntegration_1_0.CalloutResponse response = new wrts_prcgvr.ApexActionIntegration_1_0.CalloutResponse();
        Map<String,Object> arg = new Map<String,Object>();
        //List<Case> caseToUpdate = new List<Case>();
        Case currentCase = new Case();
        String recordId;
        Map<String,Object> argsMap = (Map<String,Object>) args;
        String method = (String) argsMap.get('method');
        SObject obj = (SObject) argsMap.get('sender');
        Map<String,String> parameters = (Map<String,String>)argsMap.get('parameters');

        try {
            recordId = (String) obj.get('Id');
            HDT_WRP_GenericSapIntegration sapIntegration = new HDT_WRP_GenericSapIntegration();
            sapIntegration = submitRequest(recordId,parameters.get('requestType'));

            Map<String,Object> body = (Map<String,Object>) JSON.deserializeUntyped(sapIntegration.responseBody);
            System.debug('responseBody deserialized: ' + body);

            // TODO: handle response
            Map<String,Object> data = (Map<String,Object>) body.get('data');
            if (sapIntegration.responseCode != 200 && sapIntegration.responseCode != 201) {
                response.success = false;
                response.message = 'KO';
            } else {
                System.debug('Response OK');
                response.success = true;
                response.message = 'OK';
            }
        } catch(Exception ex){
            System.debug('HDT_SRV_SelfReadingsFacade: exception ' + ex.getMessage());
        }

        // Case caseToUpdate = new Case();
        // caseToUpdate.Id = recordId;
        // caseToUpdate.SendDate__c = Date.today();

        // if (response.success) {
        //     caseToUpdate.TecnicalPhase__c = 'Esito OK da SAP';
        // } else {
        //     caseToUpdate.TecnicalPhase__c = 'Errore Lavorazione SAP';
        // }

        // HDT_UTL_DatabaseService.updateSObject(caseToUpdate);

        return response;
    }

    private static HDT_WRP_GenericSapIntegration submitRequest(String recordId,String requestType) {
       
        HDT_UTL_SapIntegrationInterface support = HDT_UTL_SapIntegrationAdapterFactory.getInstance('HDT_WS_SelfReadingsIntegrationAdapter');
        HDT_WRP_GenericSapIntegration sapIntegration = new HDT_WRP_GenericSapIntegration();
        try {
            sapIntegration.recordId = recordId;
            sapIntegration.requestType = requestType;
            sapIntegration = support.submitRequest(sapIntegration);
        } catch (Exception ex) {
            System.debug('HDT_SRV_SelfReadingsFacade: exception at line ' + ex.getLineNumber());
            System.debug(ex.getMessage()); 
        }
        return sapIntegration;
        
    }

    @Future
    private static void updateFuture(String inputString) {
        Case c = (Case) JSON.deserialize(inputString, Case.class);
        HDT_UTL_DatabaseService.updateSObject(c);
    }
}

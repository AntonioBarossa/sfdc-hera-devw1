<?xml version="1.0" encoding="UTF-8"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        name="Default ruleset" 
        xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
    <description>Default ruleset</description>
    <!--@frpanico added PMD ruleset-->
    <exclude-pattern>.*/.sfdx/.*</exclude-pattern>
    <exclude-pattern>.*SiteRegisterController*.*</exclude-pattern>
    <exclude-pattern>.*VoiceCallCaseController*.*</exclude-pattern>
    <exclude-pattern>.*TH_*.cls</exclude-pattern>

    <rule ref="category/apex/security.xml/ApexOpenRedirect" />
    <rule ref="category/apex/security.xml/ApexCRUDViolation" />
    <rule ref="category/apex/security.xml/ApexInsecureEndpoint" />
    <rule ref="category/apex/errorprone.xml/ApexCSRF" />
    <rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse" />
    <rule ref="category/apex/security.xml/ApexXSSFromURLParam" />
    <rule ref="category/apex/security.xml/ApexInsecureEndpoint" />
    <rule ref="category/apex/security.xml/ApexBadCrypto" />
    <!--<rule ref="category/apex/security.xml/ApexSOQLInjection" /> -->
    <rule ref="category/apex/security.xml/ApexSharingViolations" />

    <rule ref="category/apex/bestpractices.xml/AvoidLogicInTrigger" /> 
    <rule ref="category/apex/performance.xml/AvoidDmlStatementsInLoops" />
    <rule ref="category/apex/performance.xml/AvoidSoqlInLoops" />
    <rule ref="category/apex/performance.xml/AvoidSoslInLoops" />
    <rule ref="category/apex/errorprone.xml/AvoidHardcodingId" />

    <!-- BEST PRACTICES -->
   <rule ref="category/apex/bestpractices.xml/ApexAssertionsShouldIncludeMessage" message="Apex Assertions Should Include Message">
      <priority>1</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Bug Risk" />
         <property name="cc_remediation_points_multiplier" value="100" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts" message="Apex unit test classes should have at least one System.assert() or assertEquals() or AssertNotEquals() call">
      <priority>1</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Bug Risk" />
         <property name="cc_remediation_points_multiplier" value="100" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/bestpractices.xml/ApexUnitTestMethodShouldHaveIsTestAnnotation" message="Apex Unit Test Method Should Have IsTest Annotation">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Bug Risk" />
         <property name="cc_remediation_points_multiplier" value="100" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue" message="@isTest(seeAllData=true) should not be used in Apex unit tests because it opens up the existing database data for unexpected modification by tests">
      <priority>2</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Bug Risk" />
         <property name="cc_remediation_points_multiplier" value="100" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/bestpractices.xml/AvoidGlobalModifier" message="Avoid using global modifier">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="100" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/bestpractices.xml/AvoidLogicInTrigger" message="Avoid using logic in Trigger">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="100" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/bestpractices.xml/DebugsShouldUseLoggingLevel" message="Debugs Should Use Logging Level">
      <priority>4</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="1" />
         <property name="cc_block_highlighting" value="false" />
		 <property name="strictMode" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/bestpractices.xml/UnusedLocalVariable" message="Detects when a local variable is declared and-or assigned but not used.">
      <priority>2</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="1" />
         <property name="cc_block_highlighting" value="false" />
	  </properties>
   </rule>


   <!-- CODE STYLE -->
   <rule ref="category/apex/codestyle.xml/ClassNamingConventions" message="Class names should begin with an uppercase character">
      <priority>4</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/codestyle.xml/FieldDeclarationsShouldBeAtStart" message="Field declarations should appear before method declarations within a class.">
      <priority>4</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>      
   <rule ref="category/apex/codestyle.xml/ForLoopsMustUseBraces" message="Avoid using 'for' statements without curly braces">
      <priority>4</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/codestyle.xml/FormalParameterNamingConventions" message="Configurable naming conventions for formal parameters of methods. By default this rule uses the standard Apex naming convention (Camel case).">
    <priority>4</priority>
	<properties>
        <property name="finalMethodParameterPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="methodParameterPattern" value="[a-z][a-zA-Z0-9]*" />
    </properties>
   </rule>   
   <rule ref="category/apex/codestyle.xml/IfElseStmtsMustUseBraces" message="Avoid using 'if...else' statements without curly braces">
      <priority>4</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
         </properties>
   </rule>   
   <rule ref="category/apex/codestyle.xml/IfStmtsMustUseBraces" message="Avoid using if statements without curly braces">
      <priority>4</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/codestyle.xml/LocalVariableNamingConventions" message="Configurable naming conventions for local variable declarations. By default this rule uses the standard Apex naming convention (Camel case).">
     <priority>4</priority>
    <properties>
        <property name="finalLocalPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="localPattern" value="[a-z][a-zA-Z0-9]*" />
    </properties>
	</rule>   
   <rule ref="category/apex/codestyle.xml/MethodNamingConventions" message="Method name does not begin with a lower case character.">
      <priority>4</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="1" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/codestyle.xml/OneDeclarationPerLine" message="Use only one declaration per line">
    <priority>4</priority>
    <properties>
        <property name="strictMode" value="false" />
    </properties>
   </rule>   
   <rule ref="category/apex/codestyle.xml/PropertyNamingConventions" message="Configurable naming conventions for property declarations. By default this rule uses the standard Apex naming convention (Camel case)">
    <priority>4</priority>
	<properties>
        <property name="staticPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="instancePattern" value="[a-z][a-zA-Z0-9]*" />
    </properties>
   </rule>   
   <rule ref="category/apex/codestyle.xml/WhileLoopsMustUseBraces" message="Avoid using 'while' statements without curly braces">
      <priority>4</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>

   <!-- DESIGN -->   
   <rule ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts" message="Deeply nested if..else statements are hard to read">
      <priority>4</priority>
      <properties>
         <property name="problemDepth" value="4" />
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Complexity" />
         <property name="cc_remediation_points_multiplier" value="200" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/design.xml/CyclomaticComplexity">
      <priority>4</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Complexity" />
         <property name="cc_remediation_points_multiplier" value="200" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/design.xml/ExcessiveClassLength" message="Avoid really long classes (lines of code)">
      <priority>4</priority>
      <properties>
         <property name="minimum" value="1000" />
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Complexity" />
         <property name="cc_remediation_points_multiplier" value="150" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/design.xml/ExcessiveParameterList" message="Avoid long parameter lists">
      <priority>4</priority>
      <properties>
         <property name="minimum" value="4" />
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Complexity" />
         <property name="cc_remediation_points_multiplier" value="50" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/design.xml/ExcessivePublicCount" message="This class has too many public methods and attributes">
      <priority>4</priority>
      <properties>
         <property name="minimum" value="25" />
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Complexity" />
         <property name="cc_remediation_points_multiplier" value="150" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/design.xml/NcssConstructorCount" message="The constructor has an NCSS line count of {0}">
      <priority>4</priority>
      <properties>
         <property name="minimum" value="20" />
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Complexity" />
         <property name="cc_remediation_points_multiplier" value="50" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/design.xml/NcssMethodCount" message="The method {0}() has an NCSS line count of {1}">
      <priority>4</priority>
      <properties>
         <property name="minimum" value="60" />
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Complexity" />
         <property name="cc_remediation_points_multiplier" value="50" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/design.xml/NcssTypeCount" message="The type has an NCSS line count of {0}">
      <priority>4</priority>
      <properties>
         <property name="minimum" value="700" />
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Complexity" />
         <property name="cc_remediation_points_multiplier" value="250" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/design.xml/TooManyFields" message="Too many fields">
      <priority>4</priority>
      <properties>
         <property name="maxfields" value="20" />
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Complexity" />
         <property name="cc_remediation_points_multiplier" value="200" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   
   <!-- ERROR PRONE --> 
   <rule ref="category/apex/errorprone.xml/InaccessibleAuraEnabledGetter" >
   <priority>3</priority>
   </rule>   
   
   <rule ref="category/apex/errorprone.xml/ApexCSRF" message="Avoid making DML operations in Apex class constructor/init method">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="100" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap" message="Avoid directly accessing Trigger.old and Trigger.new">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Performance" />
         <property name="cc_remediation_points_multiplier" value="150" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/errorprone.xml/AvoidHardcodingId" message="Avoid hardcoding ID's">
      <priority>1</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security"/>
         <property name="cc_remediation_points_multiplier" value="20"/>
         <property name="cc_block_highlighting" value="false"/>		 
      </properties>
   </rule>
   <rule ref="category/apex/errorprone.xml/AvoidNonExistentAnnotations">
	  <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style"/>
         <property name="cc_remediation_points_multiplier" value="1"/>
         <property name="cc_block_highlighting" value="false"/>
      </properties>
   </rule>   
   <rule ref="category/apex/errorprone.xml/EmptyCatchBlock" message="Avoid empty catch blocks">
      <priority>1</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
         </properties>
   </rule>
	<rule ref="category/apex/errorprone.xml/EmptyStatementBlock" message="Avoid empty block statements.">
      <priority>1</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" message="Avoid empty try or finally blocks">
      <priority>2</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/errorprone.xml/EmptyWhileStmt" message="Avoid empty 'while' statements">
      <priority>2</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass" message="Classes should not have non-constructor methods with the same name as the class">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="50" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/errorprone.xml/OverrideBothEqualsAndHashcode" >
	<priority>2</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="1" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/errorprone.xml/TestMethodsMustBeInTestClasses" >
	<priority>1</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="1" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   

   <!-- PERFORMANCE -->    
   <rule ref="category/apex/performance.xml/OperationWithLimitsInLoop" message="Operation with limits in loop">
	  <priority>1</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Performance" />
         <property name="cc_remediation_points_multiplier" value="150" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/performance.xml/AvoidDebugStatements" >
   <priority>3</priority>
   </rule>
   
   <!-- SECURITY -->     
   <rule ref="category/apex/security.xml/ApexBadCrypto" >
		<priority>2</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="100" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/security.xml/ApexCRUDViolation" message="Validate CRUD permission before SOQL/DML operation">
      <priority>2</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security"/>
         <property name="cc_remediation_points_multiplier" value="150"/>
         <property name="cc_block_highlighting" value="false"/>
      </properties>
   </rule>   
   <rule ref="category/apex/security.xml/ApexDangerousMethods" message="Calling potentially dangerous method">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security"/>
         <property name="cc_remediation_points_multiplier" value="50"/>
         <property name="cc_block_highlighting" value="false"/>
      </properties>
   </rule>   
   <rule ref="category/apex/security.xml/ApexInsecureEndpoint" message="Apex callouts should use encrypted communication channels">
      <priority>2</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="50" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/security.xml/ApexOpenRedirect" message="Apex classes should safely redirect to a known location">
      <priority>2</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="50" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/security.xml/ApexSharingViolations" message="Apex classes should declare a sharing model if DML or SOQL is used">
      <priority>1</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/security.xml/ApexSOQLInjection" message="Apex classes should escape variables merged in DML query">
      <priority>1</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="20" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/security.xml/ApexSuggestUsingNamedCred" message="Consider using named credentials for authenticated callouts">
      <priority>1</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security"/>
         <property name="cc_remediation_points_multiplier" value="20"/>
         <property name="cc_block_highlighting" value="false"/>
      </properties>
   </rule>   
   <rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse" message="Apex classes should escape addError strings">
      <priority>2</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="20" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/apex/security.xml/ApexXSSFromURLParam" message="Apex classes should escape Strings obtained from URL parameters">
      <priority>2</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="20" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>   
   <rule ref="category/vf/security.xml/VfUnescapeEl" message="Avoid unescaped user controlled content in EL as it results in XSS">
      <priority>2</priority>
      <!-- <properties>       
      </properties> -->
   </rule>
   <rule ref="category/vf/security.xml/VfHtmlStyleTagXss" message="Checks for the correct encoding in STYLE tags in Visualforce pages.">
      <priority>2</priority>
      <!-- <properties>       
      </properties> -->
   </rule>   
   <rule ref="category/vf/security.xml/VfCsrf" message="Avoid calling VF action upon page load as the action becomes vulnerable to CSRF">
      <priority>2</priority>
      <!-- <properties>         
      </properties> -->
   </rule>   
    


    <rule ref="category/apex/codestyle.xml/ClassNamingConventions">
        <properties>
            <property name="testClassPattern" value="(HDT_[A-Z]+_([A-Z][a-z]+)+)" />
            <property name="abstractClassPattern" value="(HDT_[A-Z]+_([A-Z][a-z]+)+)" />
            <property name="classPattern" value="(HDT_[A-Z]+_([A-Z][a-z]+)+)" />
            <property name="interfacePattern" value="(HDT_[A-Z]+_([A-Z][a-z]+)+)" />
            <property name="enumPattern" value="(HDT_[A-Z]+_([A-Z][a-z]+)+)" />
        </properties>
    </rule>
    <rule ref="category/apex/codestyle.xml/MethodNamingConventions">
        <properties>
            <property name="testPattern" value="[a-z]+([A-Z]{1,2}[a-z0-9]+)*" />
            <property name="staticPattern" value="[a-z]+([A-Z]{1,2}[a-z0-9]+)*" />
            <property name="instancePattern" value="[a-z]+([A-Z]{1,2}[a-z0-9]+)*" />
        </properties>
    </rule>
    <rule ref="category/apex/codestyle.xml/LocalVariableNamingConventions">
        <properties>
            <property name="finalLocalPattern" value="(wrts_prcgvr*)|([A-Z]+)" />
            <property name="localPattern" value="(ObjectCompatibility)|(wrts_prcgvr*)|([a-z]+([A-Z]{1,2}[a-z0-9]+)*)" />
        </properties>
    </rule>
</ruleset>